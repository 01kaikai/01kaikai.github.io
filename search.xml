<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Container 布局容器 和 NavMenu 导航菜单基础</title>
      <link href="/2023/10/21/Elemint-Ui/"/>
      <url>/2023/10/21/Elemint-Ui/</url>
      
        <content type="html"><![CDATA[<h1><code>Container</code> 布局容器 (上)</h1><p>用于布局的容器组件，方便快速搭建页面的基本结构：</p><p><code>&lt;el-container&gt;</code>：外层容器。当子元素中包含 <code>&lt;el-header&gt;</code> 或 <code>&lt;el-footer&gt;</code> 时，全部子元素会垂直上下排列，否则会水平左右排列。</p><p><code>&lt;el-header&gt;</code>：顶栏容器。</p><p><code>&lt;el-aside&gt;</code>：侧边栏容器。</p><p><code>&lt;el-main&gt;</code>：主要区域容器。</p><p><code>&lt;el-footer&gt;</code>：底栏容器。</p><p>以上组件采用了 flex 布局，使用前请确定目标浏览器是否兼容。此外，<code>&lt;el-container&gt;</code> 的子元素只能是后四者，后四者的父元素也只能是 <code>&lt;el-container&gt;</code>。</p><h4 id="1-这里简单实现一个基础的布局">1.这里简单实现一个基础的布局:</h4><h4 id="1-html">1.html:</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-container&gt;</span><br><span class="line">          &lt;!-- 侧边 --&gt;</span><br><span class="line">          &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">             侧边</span><br><span class="line">          &lt;/el-aside&gt;</span><br><span class="line">          //头部</span><br><span class="line">          &lt;el-container&gt;</span><br><span class="line">              &lt;el-header style=&quot;text-align: right; height: 64px;  font-size: 12px;&quot;&gt;</span><br><span class="line">              top(头)</span><br><span class="line">          &lt;/el-header&gt;</span><br><span class="line">          //内容</span><br><span class="line">              &lt;el-main&gt;</span><br><span class="line">                  内容</span><br><span class="line">              &lt;/el-main&gt;</span><br><span class="line">          &lt;/el-container&gt;</span><br><span class="line">  &lt;/el-container&gt;</span><br></pre></td></tr></table></figure><h4 id="2-css">2. css:</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.el-header</span>, <span class="selector-class">.el-footer</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#B3C0D1</span>;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">   <span class="attribute">text-align</span>: center;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">60px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="selector-class">.el-aside</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#D3DCE6</span>;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">   <span class="attribute">text-align</span>: center;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">200px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="selector-class">.el-main</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#E9EEF3</span>;</span><br><span class="line">   <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">   <span class="attribute">text-align</span>: center;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">160px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="selector-tag">body</span> &gt; <span class="selector-class">.el-container</span> &#123;</span><br><span class="line">   <span class="attribute">margin-bottom</span>: <span class="number">40px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="selector-class">.el-container</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>) <span class="selector-class">.el-aside</span>,</span><br><span class="line"> <span class="selector-class">.el-container</span><span class="selector-pseudo">:nth-child</span>(<span class="number">6</span>) <span class="selector-class">.el-aside</span> &#123;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">260px</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"> <span class="selector-class">.el-container</span><span class="selector-pseudo">:nth-child</span>(<span class="number">7</span>) <span class="selector-class">.el-aside</span> &#123;</span><br><span class="line">   <span class="attribute">line-height</span>: <span class="number">320px</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h3 id="3-页面显示的内容">3.页面显示的内容:</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://sns-webpic-qc.xhscdn.com/202310212257/8fc27c1a206c0754b3174a990c84272c/spectrum/1040g0k030qgbqegm0a005nq7j6rg8rbjn652m40!nd_whgt34_webp_wm_1" alt="展示。"/></div><span class="image-caption">展示。</span></div><p><strong>这里会发现不能占满整个屏幕(页面)</strong>     不用着急可用通过 可以通过一行<code>css</code> 代码实现: <code>height: calc(100vh - 64px);</code></p><p>这里加到<code>.el-main</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.el-main</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#E9EEF3</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">160px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="built_in">calc</span>(<span class="number">100vh</span> - <span class="number">64px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-这里已经占满了哦-是不是很简单呐🥳🍉">5.这里已经占满了哦~   (是不是很简单呐🥳🍉)</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://sns-webpic-qc.xhscdn.com/202310212257/9b1d951ac0435b9b9403096ae8a191a5/spectrum/1040g0k030qgbqerb04005nq7j6rg8rbjt3k96i8!nd_whgt34_webp_wm_1" alt="展示。"/></div><span class="image-caption">展示。</span></div><h3 id="下-看到这里是不是感觉很有趣呀-那我们认识一下NavMenu-导航菜单-可不要打瞌睡哦-😊">(下)  看到这里是不是感觉很有趣呀,那我们认识一下<code>NavMenu 导航菜单</code> 可不要打瞌睡哦!!!😊</h3><h1><code>NavMenu</code> 导航菜单</h1><p>接着<code>Container</code> 布局容器 (上) 代码(内容)写</p><h3 id="1-html-2">1.html</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-container&gt;</span><br><span class="line">          &lt;!-- 侧边 --&gt;</span><br><span class="line">          &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line">          //NavMenu导航菜单内容</span><br><span class="line">                    &lt;el-col style=&quot;&quot; &gt;</span><br><span class="line">                      &lt;el-menu default-active=&quot;1&quot; class=&quot;el-menu-demo&quot; background-color=&quot;#001529&quot;</span><br><span class="line">                          text-color=&quot;hsla(0,0%,100%,.65)&quot; active-text-color=&quot;#fff&quot; router&gt;</span><br><span class="line"></span><br><span class="line">                          &lt;div style=&quot;padding-top: 4px;&quot;&gt;</span><br><span class="line">                              &lt;el-menu-item key=&quot;home&quot; index=&quot;/home&quot;&gt;</span><br><span class="line">                                  &lt;div class=&quot;ce-bian&quot;&gt;</span><br><span class="line">                                      &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                      &lt;span slot=&quot;title&quot;&gt;首页&lt;/span&gt;</span><br><span class="line">                                  &lt;/div&gt;</span><br><span class="line">                              &lt;/el-menu-item&gt;</span><br><span class="line">                          &lt;/div&gt;</span><br><span class="line">                          &lt;div style=&quot;padding-top: 10px;&quot;&gt;</span><br><span class="line">                              &lt;el-menu-item key=&quot;article&quot; index=&quot;/find&quot;&gt;</span><br><span class="line">                                  &lt;div class=&quot;ce-bian&quot;&gt;</span><br><span class="line">                                      &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                      &lt;span slot=&quot;title&quot;&gt;发现&lt;/span&gt;</span><br><span class="line">                                  &lt;/div&gt;</span><br><span class="line">                              &lt;/el-menu-item&gt;</span><br><span class="line">                          &lt;/div&gt;</span><br><span class="line">                          &lt;div style=&quot;padding-top: 10px;&quot;&gt;</span><br><span class="line">                              &lt;el-menu-item key=&quot;publish&quot; index=&quot;/my&quot;&gt;</span><br><span class="line">                                  &lt;div class=&quot;ce-bian&quot;&gt;</span><br><span class="line">                                      &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                      &lt;span slot=&quot;title&quot;&gt;音乐库&lt;/span&gt;</span><br><span class="line">                                  &lt;/div&gt;</span><br><span class="line">                              &lt;/el-menu-item&gt;</span><br><span class="line">                          &lt;/div&gt;</span><br><span class="line">                      &lt;/el-menu&gt;</span><br><span class="line">                  &lt;/el-col&gt;</span><br><span class="line">          &lt;/el-aside&gt;</span><br><span class="line">          //头部</span><br><span class="line">          &lt;el-container&gt;</span><br><span class="line">              &lt;el-header style=&quot;text-align: right; height: 64px;  font-size: 12px;&quot;&gt;</span><br><span class="line">              top(头)</span><br><span class="line">          &lt;/el-header&gt;</span><br><span class="line">          //内容</span><br><span class="line">              &lt;el-main&gt;</span><br><span class="line">                  内容</span><br><span class="line">              &lt;/el-main&gt;</span><br><span class="line">          &lt;/el-container&gt;</span><br><span class="line">  &lt;/el-container&gt;</span><br></pre></td></tr></table></figure><h3 id="页面显示效果">页面显示效果:</h3><div class="img-wrap"><div class="img-bg"><img class="img" src="https://sns-webpic-qc.xhscdn.com/202310212257/ddb309dc645db0cd1c4e636d715351db/spectrum/1040g0k030qgbqesg04705nq7j6rg8rbjv7cl490!nd_whgt34_webp_wm_1" alt="展示。"/></div><span class="image-caption">展示。</span></div><h6 id="1-会发现在侧边有个侧栏">(1)会发现在侧边有个侧栏</h6><h6 id="2-但是我们发现这里一个问题哦-侧边栏没有占满-Container-布局容器的高度哦-没关系-只需要一行css代码实现哦🍉🍉">(2)但是我们发现这里一个问题哦, 侧边栏没有占满 <code>Container</code> 布局容器的高度哦!!没关系  只需要一行css代码实现哦🍉🍉</h6><p>添加到<code>css</code> 区域哦  可不许搞错哦 (哈哈哈，相信你能行的)</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 跟随占满高度</span><br><span class="line"><span class="selector-class">.el-menu</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看一下是不是这个效果呀~</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://sns-webpic-qc.xhscdn.com/202310212257/cdce213c636b69847c10f2141fc4f610/spectrum/1040g0k030qgbqeq0g4005nq7j6rg8rbjihpcpsg!nd_whgt34_webp_wm_1" alt="展示。"/></div><span class="image-caption">展示。</span></div><p>吖 !!! 你真棒!!!</p><h1>点击tabs切换</h1><h5 id="在router-index-ts文件下">在<code>router/index.ts</code>文件下:</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">// 导入</span><br><span class="line">import &#123; createRouter, createWebHistory &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">const router = createRouter(&#123;</span><br><span class="line">    history: createWebHistory(),</span><br><span class="line">    routes: [</span><br><span class="line">        // 首页</span><br><span class="line">        &#123;</span><br><span class="line">            path: &#x27;/&#x27;,</span><br><span class="line">            component: () =&gt; import(&quot;../Layout/Latout.vue&quot;),</span><br><span class="line">            redirect:&quot;/home&quot;,</span><br><span class="line">            children: [</span><br><span class="line">                &#123;</span><br><span class="line">                    path: &#x27;/home&#x27;,</span><br><span class="line">                    component: () =&gt; import(&quot;../views/Home.vue&quot;),</span><br><span class="line">                    meta: &#123; title: &#x27;首页&#x27; &#125;,</span><br><span class="line">                    </span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    path: &#x27;/find&#x27;,</span><br><span class="line">                    component: () =&gt; import(&#x27;../views/Find.vue&#x27;),</span><br><span class="line">                    meta: &#123; title: &#x27;发现&#x27; &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    path: &#x27;/my&#x27;,</span><br><span class="line">                    component: () =&gt; import(&quot;../views/My.vue&quot;),</span><br><span class="line">                    meta: &#123; title: &#x27;我的&#x27; &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">export default router;</span><br></pre></td></tr></table></figure><h5 id="Latout-Latout-vue文件下">Latout/Latout.vue文件下:</h5><p>这里事官网的介绍: <code>router</code> 是否使用 <code>vue-router</code> 的模式，启用该模式会在激活导航时以 <code>index</code> 作为 path 进行路由跳转</p><p>可以在 <code>el-menu</code> 组件标签添加<code>router</code> ;  在<code>el-menu-item</code>标签组件下添加 index=“path路径” ; 在<code>el-main</code> 组件标签内添加 <router-view></router-view></p><p>下面有完整代码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-container&gt;</span><br><span class="line">            &lt;!-- 侧边 --&gt;</span><br><span class="line">            &lt;el-aside width=&quot;200px&quot;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;el-col style=&quot;&quot;&gt;</span><br><span class="line">                    &lt;el-menu default-active=&quot;1&quot; class=&quot;el-menu-demo&quot; background-color=&quot;#001529&quot;</span><br><span class="line">                        text-color=&quot;hsla(0,0%,100%,.65)&quot; active-text-color=&quot;#fff&quot; router&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;div style=&quot;padding-top: 4px;&quot;&gt;</span><br><span class="line">                            &lt;el-menu-item key=&quot;home&quot; index=&quot;/home&quot;&gt;</span><br><span class="line">                                &lt;div class=&quot;ce-bian&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                    &lt;span slot=&quot;title&quot;&gt;首页&lt;/span&gt;</span><br><span class="line">                                &lt;/div&gt;</span><br><span class="line">                            &lt;/el-menu-item&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div style=&quot;padding-top: 10px;&quot;&gt;</span><br><span class="line">                            &lt;el-menu-item key=&quot;article&quot; index=&quot;/find&quot;&gt;</span><br><span class="line">                                &lt;div class=&quot;ce-bian&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                    &lt;span slot=&quot;title&quot;&gt;发现&lt;/span&gt;</span><br><span class="line">                                &lt;/div&gt;</span><br><span class="line">                            &lt;/el-menu-item&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div style=&quot;padding-top: 10px;&quot;&gt;</span><br><span class="line">                            &lt;el-menu-item key=&quot;publish&quot; index=&quot;/my&quot;&gt;</span><br><span class="line">                                &lt;div class=&quot;ce-bian&quot;&gt;</span><br><span class="line">                                    &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">                                    &lt;span slot=&quot;title&quot;&gt;音乐库&lt;/span&gt;</span><br><span class="line">                                &lt;/div&gt;</span><br><span class="line">                            &lt;/el-menu-item&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/el-menu&gt;</span><br><span class="line">                &lt;/el-col&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &lt;/el-aside&gt;</span><br><span class="line">            &lt;el-container&gt;</span><br><span class="line">                &lt;el-header style=&quot;text-align: right; height: 64px;  font-size: 12px;&quot;&gt;top&lt;/el-header&gt;</span><br><span class="line">                &lt;el-main&gt;</span><br><span class="line">                    &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">                &lt;/el-main&gt;</span><br><span class="line">            &lt;/el-container&gt;</span><br><span class="line">        &lt;/el-container&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref, reactive &#125; from &quot;vue&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.el-header,</span><br><span class="line">.el-footer &#123;</span><br><span class="line">    background-color: #B3C0D1;</span><br><span class="line">    color: #333;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 60px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-aside &#123;</span><br><span class="line">    background-color: #D3DCE6;</span><br><span class="line">    color: #333;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 200px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-main &#123;</span><br><span class="line">    background-color: #E9EEF3;</span><br><span class="line">    color: #333;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 160px;</span><br><span class="line">    height: calc(100vh - 64px);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">body&gt;.el-container &#123;</span><br><span class="line">    margin-bottom: 40px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-container:nth-child(5) .el-aside,</span><br><span class="line">.el-container:nth-child(6) .el-aside &#123;</span><br><span class="line">    line-height: 260px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-container:nth-child(7) .el-aside &#123;</span><br><span class="line">    line-height: 320px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 添加的</span><br><span class="line">// 跟随占满高度</span><br><span class="line">.el-menu &#123;</span><br><span class="line">    height: 100vh;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">/* 用来修改侧边选择背景颜色 */</span><br><span class="line">.el-menu .el-menu-item.is-active &#123;</span><br><span class="line">    background-color: #1890ff !important;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>修改<code>NavMenu</code> 导航菜单默认样式 (小技巧哦, 卷si他,她们)</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 用来修改侧边选择背景颜色 */</span></span><br><span class="line"><span class="selector-class">.el-menu</span> <span class="selector-class">.el-menu-item</span><span class="selector-class">.is-active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#1890ff</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​      效果如下：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://sns-webpic-qc.xhscdn.com/202310212250/86ed2657eb4ded00dfae56127921b0dc/spectrum/1040g0k030qgbqe87020g5nq7j6rg8rbj7bv5vhg!nd_whgt34_webp_wm_1" alt="展示。"/></div><span class="image-caption">展示。</span></div><p>​</p><h1>Element-ui导航组件NavMenu页面刷新后导航高亮问题</h1><p><code>el-menu</code> 组件标签添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:default-active=&quot;$route.path&quot;</span><br></pre></td></tr></table></figure><h4 id="后面有时间在补充了作者要摸鱼去了-😎😎-不懂的可以看一下-Element-ui官网-组件-Element-里面有很多常用的组件"><code>后面有时间在补充了作者要摸鱼去了 😎😎  不懂的可以看一下 </code> ,  [Element-ui官网](<a href="https://element.eleme.cn/#/zh-CN/component/menu">组件 | Element</a>) 里面有很多常用的组件</h4>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/21/hello-world/"/>
      <url>/2023/10/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到Hexo!这是你的第一篇文章。查看文档了解更多信息。如果你在使用Hexo时遇到任何问题，你可以在故障排除中找到答案。</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo 命令</title>
      <link href="/2023/08/23/hexo%E5%91%BD%E4%BB%A4/"/>
      <url>/2023/08/23/hexo%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="hexo-常见命令">hexo 常见命令</h2><h3 id="hexo-s"><code>hexo s</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>启动服务器，用于预览主题</p><ul><li><code>hexo s</code> 是 <code>hexo server</code> 的缩写，命令效果一致；</li><li>预览的同时可以修改文章内容或者主题的代码，保存后刷新即可</li><li>对 Hexo 根目录 <code>_config.yml</code> 的修改，需要重启本地服务器后才能预览效果。</li></ul><h4 id="hexo-clean"><code>hexo clean</code></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>清楚缓存文件<code>db.json</code>和已经生成的静态文件public</p><ul><li>网站显示异常时可以试试该命令</li></ul><h3 id="hexo-g"><code>hexo g</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>生成网站的静态文件到默认的设置文件<code>public</code>中</p><ul><li>hexo g 是hexo generate的缩写</li><li>便于查看网站生成的静态文件或者手动部署网站</li><li>如果是自动部署，不需要先执行该命令</li></ul><h3 id="hexo-d"><code>hexo d</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>自动生成网站静态文件，并部署到设定的仓库中</p><ul><li>hexo d 是 hexo deploy 的缩写，效果一致</li></ul><h3 id="hexo-n-page"><code>hexo n page</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n page about</span><br></pre></td></tr></table></figure><p>意思为新建一个about的页面，默认的链接地址为<code>主页地址/about/</code></p><ul><li>标题可以用中文，但是习惯使用英文</li><li>页面标题和文章一样可以随意修改</li><li>页面不会出现在首页文章列表和归档中，也不支持分类和标签</li></ul><h3 id="hexo-n"><code>hexo n</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo n &quot;笔记01&quot;</span><br></pre></td></tr></table></figure><p>新建一篇标题为 <code>笔记01</code> 的文章</p><ul><li>新建内容时标题可以写的简单些</li><li>hexo n 是 hexo new 的缩写。</li></ul><p>常用的文章属性有如下：</p><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td>layout</td><td>Layout</td><td>post 或者 page</td></tr><tr><td>title</td><td>文章标题</td><td></td></tr><tr><td>date</td><td>创建日期</td><td>文件创建日期</td></tr><tr><td>updated</td><td>修改日期</td><td>文件修改日期</td></tr><tr><td>comments</td><td>是否开启评论</td><td>true</td></tr><tr><td>tags</td><td>标签</td><td></td></tr><tr><td>categories</td><td>分类</td><td></td></tr><tr><td>permalink</td><td>url中的名字</td><td>文件名</td></tr></tbody></table><h3 id="more">more</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用于首页展示文章时的缩略显示</span><br><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo 一些常见的命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue(2，3) 父组件传子组件 ,子组件传父组件 ,兄弟组件传兄弟组件</title>
      <link href="/2023/07/13/vue%E4%BC%A0%E5%80%BC/"/>
      <url>/2023/07/13/vue%E4%BC%A0%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<h3 id="vue2父组件传子组件-以下代码实例"><code>vue2</code>父组件传子组件,以下代码实例:</h3><p><code>父组件</code>:</p><ol><li>在父组件中使用子组件，并传递数据：在父组件的模板中，使用子组件标签，并使用 <code>v-bind</code>（简写为 <code>:</code>）指令将数据绑定到子组件的 prop 上。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 父组件 --&gt;</span><br><span class="line">&lt;template lang=&quot;&quot;&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    父组件</span><br><span class="line">    &lt;HelloWorld :list=list&gt;&lt;/HelloWorld&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &#x27;./components/HelloWorld.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      list: &#123;</span><br><span class="line">        naem: &#x27;小花&#x27;,</span><br><span class="line">        age: 10</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;&quot;&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>子组件：</code></p><ol><li>在子组件中定义 props：子组件需要在其组件选项中使用 <code>props</code> 属性来定义要接收的属性。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 子组件: --&gt;</span><br><span class="line">&lt;template lang=&quot;&quot;&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    子组件: &#123;&#123;list.naem&#125;&#125;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&quot;list&quot;],</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;&quot;&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="vue2子组件传父组件-以下代码实例"><code>vue2</code>子组件传父组件,以下代码实例:</h3><p><code>父组件</code>:</p><ol><li>在父组件中监听事件：在父组件的模板中，使用 <code>v-on</code>（简写为 <code>@</code>）指令监听子组件触发的自定义事件，并指定一个处理函数来接收子组件传递的数据。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 父组件 --&gt;</span><br><span class="line">&lt;template lang=&quot;&quot;&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    父组件: &#123;&#123;childData&#125;&#125;</span><br><span class="line">    &lt;HelloWorld :age=age @sendData=sendData&gt;&lt;/HelloWorld&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &#x27;./components/HelloWorld.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      age: 10,</span><br><span class="line">      childData: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sendData(item) &#123;  //在sendData(item) 接收 </span><br><span class="line">      this.age += 1</span><br><span class="line">      this.childData = item</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;&quot;&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>子组件</code>:</p><ol><li>在子组件中触发事件：在子组件中，使用 <code>$emit</code> 方法触发一个自定义事件，并在需要传递的数据作为参数传递给该事件。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 子组件: --&gt;</span><br><span class="line">&lt;template lang=&quot;&quot;&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    子组件:&#123;&#123;age&#125;&#125;</span><br><span class="line">    &lt;button @click=&quot;sendData&quot;&gt;点击加一&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&quot;age&quot;],</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      love: &quot;打篮球&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    sendData() &#123;</span><br><span class="line">      this.$emit(&#x27;sendData&#x27;,this.love)  //这里参数二可以放想要传的值</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;&quot;&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="vue2兄弟传兄弟-以下代码实例"><code>vue2</code>兄弟传兄弟,以下代码实例:</h3><p>创建文件夹 <code>src/common/eventBus.js</code></p><p>🍉在共享的父组件中创建事件中心：</p><p><code>eventBus.js</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &#x27;vue&#x27;;</span><br><span class="line">export const eventBus =new Vue()</span><br></pre></td></tr></table></figure><h3 id="下面是两兄弟组件">下面是两兄弟组件</h3><p>🍉第一个兄弟组件中发送数据：</p><p><code>components/dataTOSends.vue</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template lang=&quot;&quot;&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        dataToSends</span><br><span class="line">        &lt;button @click=&quot;sendData&quot;&gt;点击&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">import &#123; eventBus &#125; from &#x27;@/common/eventBus&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            ToSend: &#x27;这是要传递给兄弟组件的数据&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">    sendData() &#123;</span><br><span class="line">      eventBus.$emit(&#x27;data-updated&#x27;, this.ToSend);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;&quot;&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>第二个兄弟组件中接收数据：</p><p><code>components/HelloWorld.vue</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template lang=&quot;&quot;&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    HelloWorld</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; eventBus &#125; from &#x27;@/common/eventBus&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      receivedData: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    eventBus.$on(&#x27;data-updated&#x27;, data =&gt; &#123;</span><br><span class="line">      this.receivedData = data;</span><br><span class="line">      console.log(data, &#x27;data&#x27;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;&quot;&gt;</span><br><span class="line">  </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="vue3-父组件传子组件-以下代码实例"><code>vue3</code> 父组件传子组件,以下代码实例:</h3><p>🍉父组件中，字符串类型直接传参，其他所有类型均通过<code>v-bind</code> （简写为 <code>:</code>） 绑定传参</p><p><code>父组件</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 父组件 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    父组件</span><br><span class="line">    &lt;MyModal :list=&quot;list&quot;&gt;&lt;/MyModal&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import MyModal from &#x27;./components/MyModal.vue&#x27;;</span><br><span class="line"></span><br><span class="line">type List = [&#123;</span><br><span class="line">  name: string,</span><br><span class="line">  age: number</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">const list: List = [&#123;</span><br><span class="line">  name: &quot;小花&quot;,</span><br><span class="line">  age: 10</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>🍉定义类型type，后调用<code>defineProps</code>方法，该方法无需在<code>Vue</code>中引用，可直接使用</p><p><code>子组件</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 子组件 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        子组件: &#123;&#123; list &#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">type List = [&#123;</span><br><span class="line">    name: string,</span><br><span class="line">    age: number</span><br><span class="line">&#125;]</span><br><span class="line">// 通过defineProps来接收父组件传来的值</span><br><span class="line">const props = defineProps&lt;&#123; list: List &#125;&gt;()</span><br><span class="line">console.log(props.list);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="vue3-子组件传父组件-以下代码实例"><code>vue3</code> 子组件传父组件,以下代码实例:</h3><p>🍉子组件直接通过 <code>$emit</code> 来发送 一个事件参数</p><p><code>父组件</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 父组件 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    父组件</span><br><span class="line">    &lt;MyModal :list=&quot;list&quot; @dian=&quot;dian&quot;&gt;&lt;/MyModal&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import MyModal from &#x27;./components/MyModal.vue&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">const list = ref(10)</span><br><span class="line"></span><br><span class="line">function dian(item: any) &#123;</span><br><span class="line">  list.value += 1</span><br><span class="line">  console.log(item);  //这里接收到子组件传来的数据</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>🍉子组件中,使用<code>defineEmis</code>来传递一个事件</p><p><code>子组件</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 子组件 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        子组件: &#123;&#123; list &#125;&#125;</span><br><span class="line">        &lt;button @click=&quot;dian&quot;&gt;点击加一&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">// 通过defineProps来接收父组件传来的值</span><br><span class="line">const props = defineProps&lt;&#123; list: number &#125;&gt;()</span><br><span class="line">// defineEmits 子组件传给父组件接收数据</span><br><span class="line">const emit = defineEmits&lt;&#123; dian: any &#125;&gt;()</span><br><span class="line">const arr = &quot;子组件传父组件的数据&quot;</span><br><span class="line">function dian() &#123;</span><br><span class="line">    emit(&#x27;dian&#x27;, arr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="vue3-兄弟组件传兄弟组件-以下代码实例"><code>vue3</code> 兄弟组件传兄弟组件,以下代码实例:</h3><p>🍉<code>安装 Mitt</code>:</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mitt -S</span><br></pre></td></tr></table></figure><p>在<code>src</code>文件夹下创建 <code>utils</code> 文件夹 创建 <code>Bus.ts</code> 文件:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mitt <span class="keyword">from</span> <span class="string">&quot;mitt&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> emiter = <span class="title function_">mitt</span>();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> emiter;</span><br></pre></td></tr></table></figure><p><code>父组件</code>:</p><p>🍉这里什么好说的哦(哈哈哈)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;Son1&gt;&lt;/Son1&gt;</span><br><span class="line">    &lt;Son2&gt;&lt;/Son2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import Son1 from &#x27;./components/Son1.vue&#x27;</span><br><span class="line">import Son2 from &#x27;./components/Son2.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>子组件 Son1</code>:</p><p>🍉这里通过<code>Bus.emit</code> 派发自定义事件 ,来发送给兄弟组件的值(内容)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;div class=&quot;divBgc&quot;&gt;</span><br><span class="line">            子组件1 &lt;button @click=&quot;btn&quot;&gt;派发事件&lt;/button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import Bus from &#x27;../utils/Bus&#x27;</span><br><span class="line">let flag = ref(10)</span><br><span class="line">const btn = () =&gt; &#123;</span><br><span class="line">    flag.value = flag.value + 1</span><br><span class="line">    // 派发自定义事件  Bus.emit(&#x27;可以随便填(要英文)&#x27;, 要传的内容)</span><br><span class="line">    Bus.emit(&#x27;toSon2&#x27;, flag.value)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><code>子组件 Son2</code>:</p><p>🍉这里通过<code>Bus.on</code>来接收<code>Bus.emit</code>传来的内容。  注意这里的<code>Bus.emit('toSon2')</code>参数一单词要和<code>Bus.on('toSon2')</code>要保持一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;div class=&quot;divBgc&quot;&gt;我是子组件2-----&#123;&#123; Son2nam &#125;&#125;&lt;/div&gt;</span><br><span class="line">        &lt;button @click=&quot;btnClose&quot;&gt;关闭派发事件&lt;/button&gt;</span><br><span class="line">        &lt;button @click=&quot;btnClear&quot;&gt;清除派发事件&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script setup lang=&quot;ts&quot; &gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;;</span><br><span class="line">import Bus from &#x27;../utils/Bus&#x27;</span><br><span class="line">let Son2nam = ref(&#x27;10&#x27;)</span><br><span class="line"></span><br><span class="line">// 接收自定义事件传值 res打印的是子组件Son1,传来的内容</span><br><span class="line">Bus.on(&#x27;toSon2&#x27;, (res: any) =&gt; &#123;</span><br><span class="line">    Son2nam.value = res</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const btnClose = () =&gt; &#123;</span><br><span class="line">    // 关闭自定义事件</span><br><span class="line">    Bus.off(&#x27;toSon2&#x27;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const btnClear = () =&gt; &#123;</span><br><span class="line">    // 清除所有自定义事件</span><br><span class="line">    Bus.all.clear()</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>(以上是其中一部分还有很多方法实现,比如: <code>vuex</code>,<code>pinia</code>,<code>v-model</code>等 )有兴趣的可以去关注一下哦 ~💖💖</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript数组常用的方法</title>
      <link href="/2023/07/07/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/"/>
      <url>/2023/07/07/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>js 数组常用的方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">☞ 判断变量是不是一个数组    <span class="title class_">Array</span>.<span class="title function_">isArray</span>(ary)</span><br><span class="line"></span><br><span class="line">☞ <span class="title function_">toString</span>()   <span class="comment">// 把数组转换为字符串，使用逗号分隔</span></span><br><span class="line">☞ <span class="title function_">valueOf</span>()   <span class="comment">//  返回数组对象本身</span></span><br><span class="line"></span><br><span class="line">☞ ary.<span class="title function_">pop</span>() [常用]    <span class="comment">//返回数组中最后一个字，且会修改数组的长度</span></span><br><span class="line">☞ ary.<span class="title function_">shift</span>()  <span class="comment">//取出数组中的第一个元素，修改数组的长度</span></span><br><span class="line"></span><br><span class="line">☞ ary.<span class="title function_">push</span>() [常用]  <span class="comment">// 该方法有一个返回值，表示数组最新的长度，该方法中可以设置多个参数</span></span><br><span class="line">☞ ary.<span class="title function_">unshift</span>(number)   <span class="comment">//在数组中最开始位置添加一个值</span></span><br><span class="line"></span><br><span class="line">☞ 其他方法汇总(选择实施)</span><br><span class="line">◆ <span class="title function_">reverse</span>()  <span class="comment">// 翻转数组</span></span><br><span class="line">◆ <span class="title function_">concat</span>()  <span class="comment">//把两个数组拼接到一块,返回一个新数组</span></span><br><span class="line">◆ <span class="title function_">slice</span>(startindex, endindex)   <span class="comment">//从当前数组中截取一个新的数组</span></span><br><span class="line"> ✔ 第一个参数表示开始索引位置,第二个参数代表结束索引位置</span><br><span class="line">◆ <span class="title function_">splice</span>(startindex, deletCont, options)  <span class="comment">//删除或者替换数组中的某些值</span></span><br><span class="line"> ✔ 第一个参数代表从哪开始删除</span><br><span class="line">         ✔ 第二个参数代表一共删除几个</span><br><span class="line">         ✔ 第三个参数代表要替换的值</span><br><span class="line">◆ <span class="title function_">indexOf</span>(content[,index])，<span class="title function_">lastIndexof</span>()   <span class="comment">//没找到返回-1</span></span><br><span class="line"> ✔ 找数组中的某个值,如果找到返回索引位置,如果没有找到返回-<span class="number">1</span></span><br><span class="line"> ✔ <span class="title function_">lastIndexof</span>()  从数组的末尾开始找,如果找到,返回索引位置,如果没有找到返回-<span class="number">1</span></span><br><span class="line">◆ <span class="title class_">Join</span>()   <span class="comment">//将数组中的每一个元素通过一个字符链接到一块</span></span><br></pre></td></tr></table></figure><h1>如何使用</h1><h4 id="1-判断是不是数组-通过Array-isArray-来判断是否是数组-数组就返回true-不是就返回false">1,判断是不是数组 ,通过<code>Array.isArray()</code> 来判断是否是数组 数组就返回<code>true</code> 不是就返回<code>false</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr =[&#123;<span class="attr">name</span>:<span class="string">&#x27;小花&#x27;</span>,<span class="attr">age</span>:<span class="number">10</span>&#125;]</span><br><span class="line">​ <span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr));  <span class="comment">// 输出: true</span></span><br></pre></td></tr></table></figure><h3 id="2-把数组转换为字符串，使用逗号分隔-通过toString">2,把数组转换为字符串，使用逗号分隔 通过<code>toString()</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="string">&#x27;下雨&#x27;</span>, <span class="string">&#x27;雨伞&#x27;</span>, <span class="string">&#x27;打雷&#x27;</span>]</span><br><span class="line">​ arr.<span class="title function_">toString</span>()</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">toString</span>()); <span class="comment">// 输出: &#x27;下雨&#x27;,&#x27;雨伞&#x27;,&#x27;打雷&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="3-返回数组对象本身-通过valueOf">3,返回数组对象本身,通过<code>valueOf()</code></h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">valueOf</span>()); <span class="comment">// 输出: [1, 2, 3]</span></span><br></pre></td></tr></table></figure><p>✔ 需要注意的是，数组对象在进行隐式转换时，一般会优先调用 <code>toString()</code> 方法而非 <code>valueOf()</code> 方法。因此，<code>valueOf()</code> 方法在数组对象中使用的场景相对较少。如果想要获取数组对象的原始值，可以直接使用数组本身。</p><h3 id="4-返回数组中最后一个字，且会修改数组的长度-通过pop-常用">4,返回数组中最后一个字，且会修改数组的长度 通过<code>pop()</code> [常用]</h3><p>✔ <code>pop()</code> 方法会修改原始数组，将数组的长度减少 1，并返回被移除的元素。(从后到前删)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="string">&#x27;小米&#x27;</span>, <span class="string">&#x27;小花&#x27;</span>, <span class="string">&#x27;小小&#x27;</span>]</span><br><span class="line">​ <span class="keyword">const</span> removedElement = arr.<span class="title function_">pop</span>()</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">//输出: [&#x27;小米&#x27;, &#x27;小花&#x27;]</span></span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(removedElement); <span class="comment">//这里输出的是被删除的那一项 输出: 小小</span></span><br></pre></td></tr></table></figure><p>需要注意的是，<code>pop()</code> 方法会修改原始数组，如果原数组为空，则会返回 <code>undefined</code>。</p><h3 id="5-取出数组中的第一个元素，修改数组的长度-通过-ary-shift">5,取出数组中的第一个元素，修改数组的长度 通过 <code>ary.shift()</code></h3><p>✔ <code>shift()</code> 方法会修改原始数组，将数组的长度减少 1，并返回被移除的元素。(从前到后删)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="string">&quot;白白&quot;</span>, <span class="string">&quot;嘿嘿&quot;</span>, <span class="string">&quot;绿绿&quot;</span>]</span><br><span class="line">​ arr.<span class="title function_">shift</span>()</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">//输出 :[&#x27;嘿嘿&#x27;, &#x27;绿绿&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="6-ary-push-常用-该方法有一个返回值，表示数组最新的长度，该方法中可以设置多个参数">6,<code>ary.push()</code>[常用] 该方法有一个返回值，表示数组最新的长度，该方法中可以设置多个参数</h3><p>✔ <code>push()</code> 方法会修改原始数组，将新的元素添加到数组的末尾。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="string">&#x27;黑&#x27;</span>, <span class="string">&#x27;白&#x27;</span>, <span class="string">&#x27;蓝&#x27;</span>]</span><br><span class="line">​ arr.<span class="title function_">push</span>(<span class="string">&#x27;绿&#x27;</span>)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr);  <span class="comment">//输出: [&#x27;黑&#x27;, &#x27;白&#x27;, &#x27;蓝&#x27;, &#x27;绿&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="7-ary-unshift-number-在数组中最开始位置添加一个值">7,<code>ary.unshift(number)</code> 在数组中最开始位置添加一个值</h3><p>✔ .<code>unshift()</code> 方法会修改原始数组，将新的元素添加到数组的开头。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="string">&#x27;黑&#x27;</span>, <span class="string">&#x27;白&#x27;</span>, <span class="string">&#x27;蓝&#x27;</span>]</span><br><span class="line">​ arr.<span class="title function_">unshift</span>(<span class="string">&#x27;绿&#x27;</span>)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">//输出: [&#x27;绿&#x27;, &#x27;黑&#x27;, &#x27;白&#x27;, &#x27;蓝&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="8-reverse-翻转数组">8, <code>reverse()</code> 翻转数组</h3><p>✔ <code>reverse()</code> 方法会修改原始数组，将数组中的元素进行反转。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr =[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]</span><br><span class="line">​ arr.<span class="title function_">reverse</span>()</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">//输出: [7, 6, 5, 4, 3, 2, 1]</span></span><br></pre></td></tr></table></figure><h3 id="9-concat-把两个数组拼接到一块-返回一个新数组">9,<code>concat()</code> 把两个数组拼接到一块,返回一个新数组</h3><p>✔ <code>concat()</code> 方法不会修改原始数组，而是返回一个新的数组，包含原始数组与要连接的数组的所有元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">​ <span class="keyword">const</span> arr2 = [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>]</span><br><span class="line">​ <span class="keyword">const</span> add = arr1.<span class="title function_">concat</span>(arr2)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(add); <span class="comment">// 输出: [1, 2, 3, 4, 5, 6, 7, 8]</span></span><br></pre></td></tr></table></figure><h3 id="10-slice-startindex-endindex-从当前数组中截取一个新的数组">10,<code>slice(startindex, endindex)</code> 从当前数组中截取一个新的数组</h3><p>✔ <code>slice()</code> 方法接受两个参数 <code>startindex</code> 和 <code>endindex</code>，分别表示要切片的起始索引和结束索引。返回的新数组包含起始索引到结束索引（不包括结束索引对应的元素）之间的元素。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">​ <span class="keyword">const</span> add = arr.<span class="title function_">slice</span>(<span class="number">1</span>, <span class="number">4</span>)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(add); <span class="comment">// 输出: [2, 3, 4]</span></span><br></pre></td></tr></table></figure><h3 id="11-splice-startindex-deletCont-options-删除或者替换数组中的某些值">11,<code>splice(startindex, deletCont, options)</code> 删除或者替换数组中的某些值</h3><p>✔ 第一个参数代表从哪开始删除</p><p>✔ 第二个参数代表一共删除几个</p><p>✔ 第三个参数代表要替换的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">​ <span class="keyword">const</span> add = arr.<span class="title function_">splice</span>(<span class="number">2</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">7</span>)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(arr); <span class="comment">// 输出: [1, 2, 7, 7, 5]</span></span><br></pre></td></tr></table></figure><h3 id="12-indexOf-content-index-，lastIndexof-没找到返回-1">12,<code>indexOf(content[,index])</code>，<code>lastIndexof()</code> 没找到返回-1</h3><p>✔ 找数组中的某个值,如果找到返回索引位置,如果没有找到返回-1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">​ <span class="keyword">const</span> add = arr.<span class="title function_">indexOf</span>(<span class="number">3</span>)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(add); <span class="comment">// 输出: 2</span></span><br></pre></td></tr></table></figure><p>✔ <code>lastIndexof()</code> 从数组的末尾开始找,如果找到,返回索引位置,如果没有找到返回-1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = <span class="string">&#x27;xiao ,hua&#x27;</span>;</span><br><span class="line">​ <span class="keyword">const</span> add = arr.<span class="title function_">lastIndexOf</span>(<span class="string">&#x27;h&#x27;</span>)</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(add); <span class="comment">// 输出: 6</span></span><br></pre></td></tr></table></figure><h3 id="13-Join-将数组中的每一个元素通过一个字符链接到一块">13,<code>Join()</code> 将数组中的每一个元素通过一个字符链接到一块</h3><p>✔ <code>join()</code> 是数组对象的方法之一，用于将数组中的所有元素连接成一个字符串，并返回该字符串。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">​ <span class="keyword">const</span> add = arr.<span class="title function_">join</span>()</span><br><span class="line">​ <span class="variable language_">console</span>.<span class="title function_">log</span>(add); <span class="comment">// 输出: 1,2,3,4,5,6,7</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
